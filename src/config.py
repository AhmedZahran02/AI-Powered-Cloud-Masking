from pathlib import Path

ROOT_DIR = Path(__file__).resolve().parents[1]

DATA_DIR = ROOT_DIR / "data"
RAW_DATA_PATH = DATA_DIR / "raw"
PROCESSED_DATA_PATH = DATA_DIR / "processed"

PROCESSED_FULLY_CLOUDED_DATA_PATH = PROCESSED_DATA_PATH / "data" / "fully_clouded"
PROCESSED_FREE_CLOUDED_DATA_PATH = PROCESSED_DATA_PATH / "data" / "cloud_free"
PROCESSED_PARTIALLY_CLOUDED_DATA_PATH = PROCESSED_DATA_PATH / "data" / "partially_clouded"

PROCESSED_FULLY_CLOUDED_MASK_PATH = PROCESSED_DATA_PATH / "masks" / "fully_clouded"
PROCESSED_FREE_CLOUDED_MASK_PATH = PROCESSED_DATA_PATH / "masks" / "cloud_free"
PROCESSED_PARTIALLY_CLOUDED_MASK_PATH = PROCESSED_DATA_PATH / "masks" / "partially_clouded"

PROCESSED_MISCLASSIFIED_DATA_PATH = PROCESSED_DATA_PATH / "data" / "misclassified"
PROCESSED_MISCLASSIFIED_MASK_PATH = PROCESSED_DATA_PATH / "masks" / "misclassified"

REVIEW_DIR = PROCESSED_DATA_PATH / "review"

MODEL_PATH = ROOT_DIR / "outputs" / "models" / "Misclassification_model.pth"

def create_dirs():
    paths = [
        PROCESSED_DATA_PATH,
        PROCESSED_FULLY_CLOUDED_DATA_PATH,
        PROCESSED_FREE_CLOUDED_DATA_PATH,
        PROCESSED_PARTIALLY_CLOUDED_DATA_PATH,
        PROCESSED_FULLY_CLOUDED_MASK_PATH,
        PROCESSED_FREE_CLOUDED_MASK_PATH,
        PROCESSED_PARTIALLY_CLOUDED_MASK_PATH,
        PROCESSED_MISCLASSIFIED_DATA_PATH,
        PROCESSED_MISCLASSIFIED_MASK_PATH,
        REVIEW_DIR
    ]
    for path in paths:
        path.mkdir(parents=True, exist_ok=True)
